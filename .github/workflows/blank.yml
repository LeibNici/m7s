name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 * * * *'  # 每小时执行一次

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get latest version
        id: latest_version
        run: |
          latest_version=""
          retries=0
          until [[ -n $latest_version || $retries -ge 5 ]]; do
            echo "尝试获取最新版本..."
            latest_version=$(curl --silent -g "https://api.github.com/repos/langhuihui/monibuca/releases/latest" | jq -r .tag_name | sed 's/^v//')
            retries=$((retries + 1))
            sleep 5
          done
          
          if [[ -z $latest_version ]]; then
            echo "版本号为空, 尝试次数达到上限, 准备退出... "
            echo "version_flag=true" >> $GITHUB_ENV
          fi
          
          echo "::set-output name=latest_version::$latest_version"
          echo "Latest version: $latest_version"

      - name: Login to DockerHub
        if: env.version_flag != 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Check if image exists
        run: |
          if curl -sSLf "https://hub.docker.com/v2/repositories/${{ env.DOCKER_USERNAME }}/m7s/tags/${{ steps.latest_version.outputs.latest_version }}" > /dev/null 2>&1; then
            echo "镜像存在，不进行构建"
            echo "image_exists=true" >> $GITHUB_ENV
          else
            echo "镜像不存在, 准备构建..."
          fi

      - name: Build and push Docker image
        if: env.image_exists != 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_USERNAME }}/m7s:${{ steps.latest_version.outputs.latest_version }}
          dockerfile: ./Dockerfile
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
